function chosenWords = randomWord(varargin)
    %RANDOMWORD Picks random words from a list of common English words; can repeat.
    %
    %   https://en.wikipedia.org/wiki/NATO_phonetic_alphabet
    %
    %Optional Inputs:
    %   numObj (double): Number of words to pick.

    % Alex St. Amour

    % Handle inputs
    parser = inputParser;
    parser.addOptional('numObj', 1, @local_mustBeValidNumber);
    parser.parse(varargin{:});

    numObj = parser.Results.numObj;

    wordList = [ ...
        "Angle"; ...
        "Ant"; ...
        "Apple"; ...
        "Arch"; ...
        "Arm"; ...
        "Army"; ...
        "Baby"; ...
        "Bag"; ...
        "Ball"; ...
        "Band"; ...
        "Basin"; ...
        "Basket"; ...
        "Bath"; ...
        "Bed"; ...
        "Bee"; ...
        "Bell"; ...
        "Berry"; ...
        "Bird"; ...
        "Blade"; ...
        "Board"; ...
        "Boat"; ...
        "Bone"; ...
        "Book"; ...
        "Boot"; ...
        "Bottle"; ...
        "Box"; ...
        "Boy"; ...
        "Brain"; ...
        "Brake"; ...
        "Branch"; ...
        "Brick"; ...
        "Bridge"; ...
        "Brush"; ...
        "Bucket"; ...
        "Bulb"; ...
        "Button"; ...
        "Cake"; ...
        "Camera"; ...
        "Card"; ...
        "Cart"; ...
        "Carriage"; ...
        "Cat"; ...
        "Chain"; ...
        "Cheese"; ...
        "Chest"; ...
        "Chin"; ...
        "Church"; ...
        "Circle"; ...
        "Clock"; ...
        "Cloud"; ...
        "Coat"; ...
        "Collar"; ...
        "Comb"; ...
        "Cord"; ...
        "Cow"; ...
        "Cup"; ...
        "Curtain"; ...
        "Cushion"; ...
        "Dog"; ...
        "Door"; ...
        "Drain"; ...
        "Drawer"; ...
        "Dress"; ...
        "Drop"; ...
        "Ear"; ...
        "Egg"; ...
        "Engine"; ...
        "Eye"; ...
        "Face"; ...
        "Farm"; ...
        "Feather"; ...
        "Finger"; ...
        "Fish"; ...
        "Flag"; ...
        "Floor"; ...
        "Fly"; ...
        "Foot"; ...
        "Fork"; ...
        "Fowl"; ...
        "Frame"; ...
        "Garden"; ...
        "Girl"; ...
        "Glove"; ...
        "Goat"; ...
        "Gun"; ...
        "Hair"; ...
        "Hammer"; ...
        "Hand"; ...
        "Hat"; ...
        "Head"; ...
        "Heart"; ...
        "Hook"; ...
        "Horn"; ...
        "Horse"; ...
        "Hospital"; ...
        "House"; ...
        "Island"; ...
        "Jewel"; ...
        "Kettle"; ...
        "Key"; ...
        "Knee"; ...
        "Knife"; ...
        "Knot"; ...
        "Leaf"; ...
        "Leg"; ...
        "Library"; ...
        "Line"; ...
        "Lip"; ...
        "Lock"; ...
        "Map"; ...
        "Match"; ...
        "Monkey"; ...
        "Moon"; ...
        "Mouth"; ...
        "Muscle"; ...
        "Nail"; ...
        "Neck"; ...
        "Needle"; ...
        "Nerve"; ...
        "Net"; ...
        "Nose"; ...
        "Nut"; ...
        "Office"; ...
        "Orange"; ...
        "Oven"; ...
        "Parcel"; ...
        "Pen"; ...
        "Pencil"; ...
        "Picture"; ...
        "Pig"; ...
        "Pin"; ...
        "Pipe"; ...
        "Plane"; ...
        "Plate"; ...
        "Plough"; ...
        "Pocket"; ...
        "Pot"; ...
        "Potato"; ...
        "Prison"; ...
        "Pump"; ...
        "Rail"; ...
        "Rat"; ...
        "Receipt"; ...
        "Ring"; ...
        "Rod"; ...
        "Roof"; ...
        "Root"; ...
        "Sail"; ...
        "School"; ...
        "Scissors"; ...
        "Screw"; ...
        "Seed"; ...
        "Sheep"; ...
        "Shelf"; ...
        "Ship"; ...
        "Shirt"; ...
        "Shoe"; ...
        "Skin"; ...
        "Skirt"; ...
        "Snake"; ...
        "Sock"; ...
        "Spade"; ...
        "Sponge"; ...
        "Spoon"; ...
        "Spring"; ...
        "Square"; ...
        "Stamp"; ...
        "Star"; ...
        "Station"; ...
        "Stem"; ...
        "Stick"; ...
        "Stocking"; ...
        "Stomach"; ...
        "Store"; ...
        "Street"; ...
        "Sun"; ...
        "Table"; ...
        "Tail"; ...
        "Thread"; ...
        "Throat"; ...
        "Thumb"; ...
        "Ticket"; ...
        "Toe"; ...
        "Tongue"; ...
        "Tooth"; ...
        "Town"; ...
        "Train"; ...
        "Tray"; ...
        "Tree"; ...
        "Trousers"; ...
        "Umbrella"; ...
        "Wall"; ...
        "Watch"; ...
        "Wheel"; ...
        "Whip"; ...
        "Whistle"; ...
        "Window"; ...
        "Wing"; ...
        "Wire"; ...
        "Worm" ...
    ];

    chosenWords = wordList(randi(numel(wordList), [numObj, 1]));
end % function

function local_mustBeValidNumber(obj)
    local_mustBeScalar(obj);
    mustBeNumeric(obj);
    mustBeInteger(obj);
    mustBeNonnegative(obj);
end

function local_mustBeScalar(obj)
    %LOCAL_MUSTBESCALAR Error if the input is not scalar (size == 1x1).
    %
    %Errors:
    %   InvalidInput - When the input isn't scalar.

    if numel(obj) ~= 1
        errorId = 'local_mustBeScalar:InvalidInput';
        error(errorId, 'Input must be scalar (size == 1x1).');
    end
end
